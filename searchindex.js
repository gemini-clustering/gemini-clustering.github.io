Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/plot_feature_selection_linear", "auto_examples/plot_feature_selection_mlp", "auto_examples/plot_grouped_selection", "auto_examples/plot_gstm", "auto_examples/plot_intro_mlp_mmd", "auto_examples/plot_rim", "auto_examples/sg_execution_times", "generated/gemclus.data.celeux_one", "generated/gemclus.data.celeux_two", "generated/gemclus.data.draw_gmm", "generated/gemclus.linear.LinearMMD", "generated/gemclus.linear.LinearWasserstein", "generated/gemclus.linear.RIM", "generated/gemclus.mlp.MLPMMD", "generated/gemclus.mlp.MLPWasserstein", "generated/gemclus.sparse.SparseLinearMMD", "generated/gemclus.sparse.SparseMLPMMD", "index", "quick_start", "user_guide"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/plot_feature_selection_linear.rst", "auto_examples/plot_feature_selection_mlp.rst", "auto_examples/plot_grouped_selection.rst", "auto_examples/plot_gstm.rst", "auto_examples/plot_intro_mlp_mmd.rst", "auto_examples/plot_rim.rst", "auto_examples/sg_execution_times.rst", "generated/gemclus.data.celeux_one.rst", "generated/gemclus.data.celeux_two.rst", "generated/gemclus.data.draw_gmm.rst", "generated/gemclus.linear.LinearMMD.rst", "generated/gemclus.linear.LinearWasserstein.rst", "generated/gemclus.linear.RIM.rst", "generated/gemclus.mlp.MLPMMD.rst", "generated/gemclus.mlp.MLPWasserstein.rst", "generated/gemclus.sparse.SparseLinearMMD.rst", "generated/gemclus.sparse.SparseMLPMMD.rst", "index.rst", "quick_start.rst", "user_guide.rst"], "titles": ["GEMCLUS API", "General examples", "Feature selection using the Sparse MMD OvO (Logistic regression)", "Feature selection using the Sparse MMD OvA (MLP)", "Grouped Feature selection with a linear model", "Example of decision boundary map for a mixture of Gaussian and low-degree Student distributions", "An introducing example to clustering with an MLP and the MMD GEMINI", "Simple logistic regression with RIM", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.celeux_one", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.celeux_two", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.draw_gmm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.LinearMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.LinearWasserstein", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.RIM", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.mlp</span></code>.MLPMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.mlp</span></code>.MLPWasserstein", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.sparse</span></code>.SparseLinearMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.sparse</span></code>.SparseMLPMMD", "Welcome to GemClus documentation!", "Quick start on gemclus", "User guide : contents"], "terms": {"The": [0, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "gemini": [0, 2, 3, 4, 5, 8, 12, 13, 14, 15, 16, 17, 18], "packag": [0, 20], "current": [0, 12, 13, 15, 16, 17, 18, 21], "contain": [0, 11], "simpl": [0, 1, 8, 14, 19, 20, 21], "mlp": [0, 1, 5, 8, 18, 20], "logist": [0, 1, 3, 4, 8, 9, 12, 13, 14, 17, 18, 21], "regress": [0, 1, 3, 4, 8, 9, 12, 13, 14, 17, 18, 21], "all": [0, 1, 2, 3, 4, 11, 12, 13, 15, 16, 17, 18, 20, 21], "featur": [0, 1, 5, 6, 7, 8, 9, 17, 18, 21], "well": [0, 5, 12, 13, 14, 15, 16, 17, 18, 19, 21], "sparsiti": [0, 17, 18, 20, 21], "constrain": [0, 4, 21], "variant": 0, "we": [1, 2, 3, 4, 5, 7, 19, 20, 21], "give": [1, 20], "here": [1, 5, 19, 20], "some": [1, 4, 19, 21], "how": [1, 2, 3, 4, 7, 9, 20, 21], "us": [1, 4, 7, 8, 12, 16, 20, 21], "our": [1, 3, 4, 19, 20], "base": [1, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21], "model": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "an": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "introduc": [1, 8, 15], "cluster": [1, 4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21], "mmd": [1, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21], "select": [1, 8, 9, 10, 17, 18, 21], "spars": [1, 4, 8, 9, 20, 21], "ovo": [1, 6, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21], "rim": [1, 8], "decis": [1, 7, 8, 13, 21], "boundari": [1, 7, 8, 13, 21], "map": [1, 8, 13], "mixtur": [1, 7, 8, 9, 10, 11, 13], "gaussian": [1, 2, 3, 7, 8, 9, 10, 11, 13], "low": [1, 8, 13], "degre": [1, 8, 13], "student": [1, 8, 13], "distribut": [1, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 19, 20], "group": [1, 3, 8, 17, 18, 21], "linear": [1, 5, 7, 8, 15, 16, 17, 18, 21], "ova": [1, 8, 12, 15, 16, 17, 18, 20, 21], "download": [1, 2, 3, 4, 5, 6, 7], "python": [1, 2, 3, 4, 5, 6, 7], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "code": [1, 2, 3, 4, 5, 6, 7], "auto_examples_python": 1, "zip": 1, "jupyt": [1, 2, 3, 4, 5, 6, 7], "notebook": [1, 2, 3, 4, 5, 6, 7], "auto_examples_jupyt": 1, "galleri": [1, 2, 3, 4, 5, 6, 7, 21], "sphinx": [1, 2, 3, 4, 5, 6, 7], "go": [2, 3, 4, 5, 6, 7, 19], "end": [2, 3, 4, 5, 6, 7], "full": [2, 3, 4, 5, 6, 7], "exampl": [2, 3, 4, 7, 8, 12, 16, 19], "In": [2, 3, 4, 6, 7, 19, 20, 21], "thi": [2, 3, 4, 5, 6, 7, 9, 10, 14, 17, 18, 19, 20, 21], "ask": [2, 3, 4, 20], "gemclu": [2, 3, 4, 5, 6, 7, 21], "sparselinearmmd": [2, 4, 18, 21], "perform": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "where": [2, 3, 4, 5], "regularis": [2, 3, 4, 7, 14], "penalti": [2, 3, 4, 7, 14, 17, 18, 21], "i": [2, 3, 4, 5, 6, 7, 9, 10, 11, 17, 18, 19, 21], "progress": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18], "increas": [2, 3, 4], "until": [2, 3, 4], "2": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21], "ar": [2, 3, 4, 5, 7, 9, 12, 13, 15, 16, 17, 18, 20], "discard": [2, 3, 4], "keep": [2, 3, 21], "best": [2, 3], "weight": [2, 3, 12, 13, 14, 15, 16, 17, 18], "minimum": [2, 3], "number": [2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "maintain": [2, 3], "score": [2, 3, 4, 7, 12, 13, 14, 15, 16, 17, 18, 20], "close": [2, 3, 9], "90": [2, 3], "maximum": [2, 3, 12, 13, 14, 15, 16, 17, 18], "valu": [2, 3, 12, 13, 15, 16, 17, 18], "encount": [2, 3], "dure": [2, 3, 17], "consist": [2, 3, 4, 7, 20], "3": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20], "isotrop": [2, 3, 9], "so": [2, 3, 5, 21], "find": [2, 3, 4, 5, 19], "5d": 2, "20": [2, 9, 15, 16, 18], "noisi": [2, 3, 4, 9, 10], "variabl": [2, 3, 4, 9, 10, 17, 18], "thu": [2, 3, 4, 20], "optim": [2, 3, 4], "solut": [2, 3, 4], "should": [2, 3, 4], "onli": [2, 3, 4, 5, 20, 21], "5": [2, 3, 4, 5, 6, 7, 9], "relev": [2, 3, 4], "suffici": [2, 3, 4], "get": [2, 3, 4, 19, 20], "correct": [2, 3, 4], "from": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "matplotlib": [2, 3, 4, 5, 6, 7], "import": [2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20], "pyplot": [2, 3, 4, 5, 6, 7], "plt": [2, 3, 4, 5, 6, 7], "data": [2, 7, 18, 19, 20, 21], "celeux_on": 2, "numpi": [2, 3, 4, 5, 7, 19], "np": [2, 3, 4, 5, 7], "sklearn": [2, 3, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21], "metric": [2, 13, 16, 21], "gener": [2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "sampl": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "separ": [2, 3, 7], "addit": [2, 9, 10, 20], "p": [2, 9, 12, 13, 15, 16, 19, 20], "independ": [2, 9, 20], "x": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "y": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "n": [2, 4, 5, 9, 10, 11], "300": [2, 9], "mu": [2, 9, 11], "1": [2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20], "7": [2, 4, 9], "random_st": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "0": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "creat": [2, 3, 4, 7], "just": [2, 3, 4, 7], "call": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18], "method": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 21], "iter": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18], "through": [2, 3, 4, 18, 19], "gradient": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18], "descent": [2, 3, 4, 12, 13, 14, 15, 16, 17, 18], "clf": [2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18], "alpha": [2, 3, 4, 5, 7, 17, 18], "true": [2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21], "search": [2, 3, 4], "elimin": [2, 3, 4, 18], "best_weight": [2, 3, 4], "n_featur": [2, 3, 4, 9, 10, 12, 15, 16, 17, 18], "take": [2, 3, 4, 5, 7, 20], "look": [2, 3, 4, 7, 20], "decreas": [2, 3], "print": [2, 3, 4, 7, 12, 13, 14, 15, 16, 17, 18], "f": [2, 3, 4, 17, 18, 19, 20], "top": [2, 3, 4, 5, 17, 18], "wa": [2, 3, 4, 9, 10, 19, 20], "max": [2, 3, 4, 7], "which": [2, 3, 4, 7, 9, 10, 11, 20], "settl": [2, 3, 4], "optimum": [2, 3, 4], "9": [2, 3, 4], "highlight": [2, 3], "along": [2, 3], "titl": [2, 3, 19], "depend": [2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18], "plot": [2, 3, 5], "xlabel": [2, 3, 5, 6, 7], "ylabel": [2, 3, 5, 6, 7], "ylim": [2, 3, 5], "show": [2, 3, 4, 5, 6, 7], "expect": [2, 5, 20], "first": [2, 5, 15, 16, 18, 20], "linalg": [2, 3, 4], "norm": [2, 3, 4, 21], "axi": [2, 3, 4, 5], "ord": [2, 3, 4], "838372528505907": 2, "1481320181509105": 2, "8333188163358196": 2, "arrai": [2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "4": [2, 3, 4, 5, 10], "now": [2, 3, 5, 7], "evalu": 2, "predict": [2, 3, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20], "y_pred": [2, 3, 5, 6, 7], "ari": 2, "adjusted_rand_scor": 2, "8221373771284672": 2, "total": [2, 3, 4, 5, 6, 7, 8], "run": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "time": [2, 3, 4, 5, 6, 7, 20], "script": [2, 3, 4, 5, 6, 7], "minut": [2, 3, 4, 5, 6, 7], "246": [2, 8], "second": [2, 3, 4, 5, 6, 7], "plot_feature_selection_linear": [2, 8], "py": [2, 3, 4, 5, 6, 7, 8], "ipynb": [2, 3, 4, 5, 6, 7], "sparsemlpmmd": [3, 17], "2d": [3, 10, 11], "48": 3, "make_blob": [3, 6, 7], "center": [3, 6, 7], "cluster_std": [3, 6, 7], "n_sampl": [3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18], "200": [3, 5, 6, 7], "add": [3, 21], "extra": 3, "random": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "seed": [3, 4, 5], "concaten": [3, 4, 5, 9], "normal": [3, 4], "scale": [3, 9, 19], "size": [3, 4, 5, 12, 13, 14, 15, 16, 17, 18], "figur": 3, "figsiz": 3, "10": [3, 4, 5, 7, 18, 20], "subplot": 3, "lasso": [3, 17, 18, 21], "tight_layout": 3, "5192633113381595": 3, "6735427201341286": 3, "5061884481207157": 3, "x_0": [3, 6, 7], "x_1": [3, 6, 7], "x_2": [3, 6, 7], "ax0": [3, 6, 7], "scatter": [3, 4, 5, 6, 7], "c": [3, 4, 5, 6, 7, 9, 10, 19, 20], "crimson": [3, 6, 7], "": [3, 6, 7], "50": [3, 4, 5, 6, 7], "ax1": [3, 6, 7], "deepskyblu": [3, 6, 7], "ax2": [3, 6, 7], "darkgreen": [3, 6, 7], "leg": [3, 6, 7], "legend": [3, 6, 7], "loc": [3, 6, 7], "upper": [3, 6, 7], "left": [3, 6, 7, 20], "fancybox": [3, 6, 7], "scatterpoint": [3, 6, 7], "get_fram": [3, 6, 7], "set_alpha": [3, 6, 7], "11": [3, 4, 8], "970": [3, 8], "plot_feature_selection_mlp": [3, 8], "moreov": [4, 20], "produc": 4, "categor": 4, "one": [4, 12, 13, 15, 16, 17, 18, 20, 21], "hot": [4, 17, 18], "encod": [4, 17, 18], "consid": [4, 17, 18], "altogeth": 4, "option": [4, 17, 18], "binomi": 4, "paramet": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "8": 4, "inform": [4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "outcom": 4, "multinomi": [4, 5], "x1_class_1": 4, "pval": 4, "05": [4, 8], "45": 4, "x2_class_1": 4, "x_class_1": 4, "x1_class_2": 4, "x2_class_2": 4, "x_class_2": 4, "x_inform": 4, "x_nois": 4, "100": 4, "assign": [4, 12, 13, 14, 15, 16, 17, 18], "repeat": 4, "arang": 4, "final": 4, "write": 4, "out": [4, 19], "partit": [4, 17, 18], "rang": [4, 5], "shape": [4, 9, 10, 12, 13, 14, 15, 16, 17, 18], "visualis": 4, "def": 4, "rand_jitt": 4, "return": [4, 9, 10, 11], "randn": 4, "len": 4, "01": [4, 17, 18], "argmax": [4, 5, 7], "red": 4, "blue": [4, 5], "6": 4, "12": 4, "13": 4, "14": 4, "15": 4, "lower": 4, "threshold": 4, "80": 4, "keep_threshold": 4, "3027278385416854": 4, "5893356021541236": 4, "4304020419387113": 4, "981": [4, 8], "plot_grouped_select": [4, 8], "retak": 5, "experi": 5, "origin": [5, 11, 19, 20, 21], "paper": [5, 14, 21], "want": [5, 21], "incorpor": 5, "freedom": 5, "t": 5, "consequ": 5, "mai": [5, 20], "seem": [5, 21], "like": [5, 19, 20], "outlier": 5, "unlik": 5, "done": 5, "linearwasserstein": [5, 12], "instead": 5, "far": [5, 21], "apart": 5, "mean": [5, 9, 11], "df": 5, "multivari": 5, "ones": [5, 12, 13, 15, 16, 17, 18], "proport": [5, 11], "bincount": 5, "sort": 5, "covari": [5, 11], "ey": 5, "k": [5, 20], "multivariate_norm": 5, "nx": 5, "zero": 5, "u": [5, 7, 19], "chisquar": 5, "reshap": [5, 7], "sqrt": 5, "expand_dim": 5, "n_cluster": [5, 7, 12, 13, 14, 15, 16, 17, 18, 20], "fit_predict": 5, "grid": 5, "input": [5, 7, 18, 21], "help": [5, 19], "draw": [5, 9, 10, 11], "x_val": [5, 7], "linspac": [5, 7], "num": [5, 7], "y_val": [5, 7], "xx": [5, 7], "yy": [5, 7], "meshgrid": [5, 7], "grid_input": [5, 7], "c_": [5, 7], "ravel": [5, 7], "zz": [5, 7], "contourf": [5, 7], "cmap": 5, "reds_r": 5, "xlim": 5, "18": [5, 8], "278": [5, 8], "plot_gstm": [5, 8], "base_gemini": 6, "densemmdovo": 6, "mlpmmd": [6, 16, 20], "dataset": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "environ": [6, 7], "pleas": [6, 7, 19, 20], "rerun": [6, 7], "cell": [6, 7], "html": [6, 7], "represent": [6, 7, 15, 16, 18], "trust": [6, 7], "On": [6, 7, 17, 18], "github": [6, 7], "unabl": [6, 7], "render": [6, 7], "try": [6, 7, 19], "load": 6, "page": [6, 7], "nbviewer": [6, 7], "org": [6, 7], "mlpmmdmlpmmd": 6, "673": [6, 8], "plot_intro_mlp_mmd": [6, 8], "mutual": [7, 12, 13, 14, 15, 16, 17, 18, 19, 20], "propos": [7, 12, 13, 14, 15, 16, 17, 18, 20, 21], "kraus": [7, 14], "et": [7, 9, 10, 14, 18, 20], "al": [7, 9, 10, 14, 18, 20], "2010": [7, 14], "maximis": [7, 12, 13, 14, 15, 16, 20], "under": [7, 19], "ell_2": [7, 14], "do": [7, 19], "fit": [7, 12, 13, 14, 15, 16, 17, 18, 20], "rimrim": 7, "let": 7, "accord": 7, "probabl": [7, 20], "grad": 7, "min": 7, "grid_pr": 7, "predict_proba": [7, 12, 13, 14, 15, 16, 17, 18], "isol": 7, "level": 7, "021396049320560717": 7, "427": [7, 8], "plot_rim": [7, 8], "00": 8, "44": 8, "576": 8, "execut": 8, "auto_exampl": 8, "file": 8, "mb": 8, "07": 8, "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "tupl": [9, 10, 11], "ndarrai": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "compon": [9, 10, 11], "respect": [9, 20], "over": 9, "dimens": 9, "excess": 9, "taken": [9, 10], "celeux": [9, 10], "section": [9, 10], "int": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "default": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "float": [9, 12, 13, 14, 15, 16, 17, 18], "control": [9, 12, 13, 14, 15, 16, 17, 18], "each": [9, 10, 11], "other": 9, "randomst": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "instanc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "determin": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "creation": [9, 10, 11], "pass": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "reproduc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "output": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "across": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "multipl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "gmm": [9, 10, 11], "drawn": [9, 10, 11, 20], "refer": [9, 10, 12, 13, 14, 15, 16, 17, 18], "g": [9, 10], "martin": [9, 10], "magniett": [9, 10], "m": [9, 10, 18, 19, 20], "l": [9, 10, 17, 18, 19, 20], "maugi": [9, 10], "rabusseau": [9, 10], "rafteri": [9, 10], "A": [9, 10, 11, 17, 18, 20], "e": [9, 10, 19, 20], "2014": [9, 10], "compar": [9, 10, 20], "regular": [9, 10, 14], "approach": [9, 10], "journal": [9, 10, 20], "de": [9, 10], "la": [9, 10], "societ": [9, 10], "francais": [9, 10], "statistiqu": [9, 10], "155": [9, 10], "57": [9, 10], "71": [9, 10], "2000": 10, "linearli": 10, "non": 10, "sigma": 11, "pi": 11, "element": 11, "list": [11, 17, 18], "1d": 11, "class": [12, 13, 14, 15, 16, 17, 18, 20, 21], "max_it": [12, 13, 14, 15, 16, 17, 18], "1000": [12, 13, 14, 15, 16, 17, 18], "learning_r": [12, 13, 14, 15, 16, 17, 18], "001": [12, 13, 14, 15, 16, 17, 18], "kernel": [12, 15, 17, 18, 21], "solver": [12, 13, 14, 15, 16, 17, 18], "adam": [12, 13, 14, 15, 16, 17, 18], "fals": [12, 13, 14, 15, 16, 17, 18], "verbos": [12, 13, 14, 15, 16, 17, 18], "implement": [12, 13, 14, 15, 16, 19], "form": [12, 13, 14, 15, 16, 17, 18], "neuron": [12, 13, 14, 15, 16, 17, 18], "neural": [12, 13, 14, 15, 16, 17, 18, 19, 20], "network": [12, 13, 14, 15, 16, 17, 18, 20], "epoch": [12, 13, 14, 15, 16, 17, 18], "singl": [12, 13, 14, 15, 16, 17, 18], "1e": [12, 13, 14, 15, 16, 17, 18], "initi": [12, 13, 14, 15, 16, 17, 18], "learn": [12, 13, 14, 15, 16, 17, 18, 19, 20], "rate": [12, 13, 14, 15, 16, 17, 18], "It": [12, 13, 14, 15, 16, 17, 18, 20], "step": [12, 13, 14, 15, 16, 17, 18], "updat": [12, 13, 14, 15, 16, 17, 18], "additive_chi2": [12, 15, 17, 18], "chi2": [12, 15, 17, 18], "cosin": [12, 13, 15, 16, 17, 18], "poli": [12, 15, 17, 18], "polynomi": [12, 15, 17, 18], "rbf": [12, 15, 17, 18], "laplacian": [12, 15, 17, 18], "sigmoid": [12, 15, 17, 18], "combin": [12, 13, 15, 16, 17, 18], "object": [12, 13, 15, 16, 17, 18, 20], "correspond": [12, 13, 15, 16, 17, 18], "kernel_param": [12, 15, 17, 18], "bool": [12, 13, 14, 15, 16, 17, 18], "whether": [12, 13, 14, 15, 16, 17, 18], "sgd": [12, 13, 14, 15, 16, 17, 18], "optimis": [12, 13, 14, 15, 16, 17, 18], "stochast": [12, 13, 14, 15, 16, 17, 18], "kingma": [12, 13, 14, 15, 16, 17, 18], "diederik": [12, 13, 14, 15, 16, 17, 18], "jimmi": [12, 13, 14, 15, 16, 17, 18], "ba": [12, 13, 14, 15, 16, 17, 18], "messag": [12, 13, 14, 15, 16, 17, 18], "stdout": [12, 13, 14, 15, 16, 17, 18], "bia": [12, 13, 14, 15, 16, 17, 18], "initialis": [12, 13, 14, 15, 16, 17, 18], "result": [12, 13, 14, 15, 16, 17, 18, 20], "function": [12, 13, 14, 15, 16, 17, 18, 19, 21], "train": [12, 13, 14, 15, 16, 17, 18, 20], "wasserstein": [12, 13, 15, 16, 21], "generalis": [12, 13, 15, 16, 17, 18, 19, 20], "discrimin": [12, 13, 14, 15, 16, 17, 18], "loui": [12, 13, 15, 16, 17, 18, 19], "ohl": [12, 13, 15, 16, 17, 18, 19, 20], "pierr": [12, 13, 15, 16, 17, 18, 19], "alexandr": [12, 13, 15, 16, 17, 18, 19], "mattei": [12, 13, 15, 16, 17, 18, 19, 20], "charl": [12, 13, 15, 16, 17, 18, 19], "bouveyron": [12, 13, 15, 16, 17, 18, 19, 20], "warith": [12, 13, 15, 16, 17, 18, 19], "harchaoui": [12, 13, 15, 16, 17, 18, 19, 20], "micka\u00ebl": [12, 13, 15, 16, 17, 18], "leclercq": [12, 13, 15, 16, 17, 18, 19, 20], "arnaud": [12, 13, 15, 16, 17, 18, 19], "droit": [12, 13, 15, 16, 17, 18, 19, 20], "freder": [12, 13, 15, 16, 17, 18, 19], "preciosio": [12, 13, 15, 16, 17, 18], "load_iri": [12, 13, 14, 15, 16, 17, 18, 20], "return_x_i": [12, 13, 14, 15, 16, 17, 18, 20], "6949190522657158": 12, "attribut": [12, 13, 14, 15, 16, 17, 18], "w_": [12, 13, 14, 17], "b_": [12, 13, 14, 17], "bias": [12, 13, 14, 15, 16, 17, 18], "optimiser_": [12, 13, 14, 15, 16, 17, 18], "adamoptim": [12, 13, 14, 15, 16, 17, 18], "sgdoptim": [12, 13, 14, 15, 16, 17, 18], "algorithm": [12, 13, 14, 15, 16, 17, 18, 21], "chosen": [12, 13, 14, 15, 16, 17, 18], "labels_": [12, 13, 14, 15, 16, 17, 18], "label": [12, 13, 14, 15, 16, 17, 18], "were": [12, 13, 14, 15, 16, 17, 18], "n_iter_": [12, 13, 14, 15, 16, 17, 18], "took": [12, 13, 14, 15, 16, 17, 18], "converg": [12, 13, 14, 15, 16, 17, 18, 20], "__init__": [12, 13, 14, 15, 16, 17, 18], "euclidean": [13, 16, 21], "logisti": 13, "l2": [13, 16], "l1": [13, 16], "manhattan": [13, 16], "cityblock": [13, 16], "paired_dist": [13, 16], "linearmmd": [13, 14, 17], "6509087196143133": 13, "n_features_in": [13, 14], "reg": 14, "classic": 14, "follow": [14, 19], "framework": 14, "describ": [14, 17, 18], "hyperparamet": 14, "maxim": 14, "ryan": 14, "gome": 14, "andrea": 14, "pietro": 14, "perona": 14, "00962912118121384": 14, "n_hidden_dim": [15, 16, 18], "two": [15, 16, 17, 20], "layer": [15, 16, 17, 18, 21], "hidden": [15, 16, 18, 21], "mlpwasserstein": 15, "7592155845461592": 15, "w1_": [15, 16, 18], "b1_": [15, 16, 18], "w2_": [15, 16, 18], "b2_": [15, 16, 18], "h_": [15, 16, 18], "after": [15, 16, 18], "7615502432434385": 16, "version": [17, 18, 20, 21], "vanilla": [17, 18], "variat": [17, 18], "bring": [17, 18, 20], "constraint": [17, 18], "ensur": [17, 18], "via": 17, "proxim": [17, 18], "variou": [17, 18], "set": [17, 18, 20, 21], "must": [17, 18], "indic": [17, 18], "repres": [17, 18], "can": [17, 18, 19, 20, 21], "typic": [17, 18], "scheme": [17, 18], "lassonet": [17, 18, 20, 21], "architectur": [17, 18, 21], "lemhadri": [17, 18, 20], "ruan": [17, 18, 20], "abraham": [17, 18, 20], "tibshirani": [17, 18, 20], "r": [17, 18, 20], "joint": [17, 18, 20, 21], "6940342321220005": 17, "skip": [18, 21], "connect": [18, 21], "inspir": [18, 20, 21], "2021": [18, 20], "hierarchi": 18, "coeffici": 18, "rel": 18, "strength": 18, "between": [18, 20, 21], "7664211836410726": 18, "w_skip_": 18, "thank": 19, "you": [19, 20, 21], "check": [19, 20], "realli": 19, "pleasur": 19, "dedic": 19, "deriv": [19, 20, 21], "theori": [19, 20], "allow": 19, "without": [19, 20], "hypothes": 19, "provid": [19, 20, 21], "overal": 19, "small": 19, "start": 19, "user": [19, 20], "guid": [19, 20], "api": [19, 20], "tool": 19, "written": 19, "scikit": [19, 20], "compat": 19, "extens": [19, 21], "complet": 19, "link": 19, "announc": 19, "instruct": 19, "pip": 19, "librari": [19, 21], "requir": [19, 21], "coupl": 19, "scientif": 19, "scipi": 19, "pot": 19, "If": [19, 20, 21], "work": 19, "cite": 19, "neurip": 19, "w": [19, 20], "precioso": [19, 20], "2022": [19, 20], "octob": 19, "advanc": [19, 20], "process": [19, 20], "system": [19, 20], "inproceed": 19, "ohl2022generalis": 19, "author": 19, "micka": 19, "booktitl": 19, "editor": 19, "alic": 19, "h": [19, 20], "oh": [19, 20], "alekh": 19, "agarw": [19, 20], "daniel": 19, "belgrav": [19, 20], "kyunghyun": 19, "cho": [19, 20], "year": 19, "url": 19, "http": 19, "openreview": 19, "net": 19, "forum": 19, "id": 19, "0oy3pia": 19, "adp": 19, "ha": [19, 20], "been": 19, "support": 19, "french": 19, "govern": 19, "3ia": 19, "c\u00f4te": 19, "d": [19, 20], "azur": 19, "invest": 19, "futur": 19, "project": 19, "manag": 19, "nation": 19, "research": [19, 20], "agenc": 19, "anr": 19, "19": 19, "p3ia": 19, "0002": 19, "would": 19, "also": 19, "franc": 19, "canada": 19, "fund": 19, "ffcr": 19, "contribut": 19, "partli": 19, "eu": 19, "horizon": 19, "2020": 19, "ai4media": 19, "contract": 19, "951911": 19, "mani": 19, "jhonatan": 19, "torr": 19, "hi": 19, "insight": 19, "develop": 19, "short": 20, "descript": 20, "hint": 20, "about": 20, "For": [20, 21], "more": [20, 21], "detail": 20, "definit": 20, "its": 20, "public": 20, "stand": 20, "novel": 20, "type": 20, "measur": 20, "distanc": [20, 21], "custer": 20, "p_": [20, 21], "theta": [20, 21], "v": 20, "mathbb": 20, "_": 20, "sim": 20, "right": 20, "y_1": 20, "y_2": 20, "specif": [20, 21], "involv": 20, "bay": 20, "theorem": 20, "easili": 20, "tractabl": 20, "cane": 20, "valuat": 20, "henc": 20, "ani": [20, 21], "parametr": 20, "assumpt": 20, "convent": 20, "At": 20, "moment": 20, "report": 20, "fewer": 20, "than": 20, "good": 20, "practic": 20, "sever": 20, "merg": 20, "avail": 20, "loss": 20, "your": 20, "own": 20, "further": 20, "improv": 20, "mainli": 20, "feel": 20, "interest": 20, "ed": 20, "machin": 20, "22": 20, "127": 20, "29": 20, "2023": 20, "doi": 20, "48550": 20, "arxiv": 20, "2302": 20, "03391": 20, "both": 21, "present": 21, "mode": 21, "ad": 21, "constructor": 21, "achiev": 21, "howev": 21, "regard": 21, "chose": 21, "becaus": 21, "yield": 21, "worst": 21, "space": 21, "comput": 21, "directli": 21, "pairwise_dist": 21, "same": 21, "manner": 21, "pairwise_kernel": 21, "By": 21, "made": 21, "choic": 21, "forc": 21, "usag": 21, "multi": 21, "perceptron": 21, "flexibl": 21, "yet": 21, "express": 21, "enough": 21, "term": 21, "case": 21, "simpler": 21, "note": 21, "induc": 21, "anoth": 21, "_basemmd": 21, "_basewasserstein": 21, "rewrit": 21, "_infer": 21, "_get_weight": 21, "_init_param": 21, "includ": 21}, "objects": {"gemclus.data": [[9, 0, 1, "", "celeux_one"], [10, 0, 1, "", "celeux_two"], [11, 0, 1, "", "draw_gmm"]], "gemclus.linear": [[12, 1, 1, "", "LinearMMD"], [13, 1, 1, "", "LinearWasserstein"], [14, 1, 1, "", "RIM"]], "gemclus.linear.LinearMMD": [[12, 2, 1, "", "__init__"]], "gemclus.linear.LinearWasserstein": [[13, 2, 1, "", "__init__"]], "gemclus.linear.RIM": [[14, 2, 1, "", "__init__"]], "gemclus.mlp": [[15, 1, 1, "", "MLPMMD"], [16, 1, 1, "", "MLPWasserstein"]], "gemclus.mlp.MLPMMD": [[15, 2, 1, "", "__init__"]], "gemclus.mlp.MLPWasserstein": [[16, 2, 1, "", "__init__"]], "gemclus.sparse": [[17, 1, 1, "", "SparseLinearMMD"], [18, 1, 1, "", "SparseMLPMMD"]], "gemclus.sparse.SparseLinearMMD": [[17, 2, 1, "", "__init__"]], "gemclus.sparse.SparseMLPMMD": [[18, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"gemclu": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "api": 0, "cluster": [0, 2, 3, 5, 6, 7, 19, 20], "model": [0, 2, 3, 4, 5, 6, 7], "dens": 0, "spars": [0, 2, 3, 17, 18], "dataset": [0, 2, 3, 4, 7], "gener": [0, 1, 5, 6], "exampl": [1, 5, 6, 9, 13, 14, 15, 17, 18, 21], "basic": [1, 21], "gemini": [1, 6, 19, 20, 21], "featur": [2, 3, 4, 20], "select": [2, 3, 4, 20], "us": [2, 3, 9, 13, 14, 15, 17, 18, 19], "mmd": [2, 3, 6], "ovo": 2, "logist": [2, 7], "regress": [2, 7], "load": [2, 3, 4, 7], "simpl": [2, 3, 4, 7], "synthet": [2, 3, 4, 7], "train": [2, 3, 4, 5, 7], "path": [2, 3, 4], "result": [2, 3, 4], "final": [2, 3, 5, 6, 7], "ova": 3, "mlp": [3, 6, 15, 16], "group": 4, "linear": [4, 12, 13, 14], "decis": 5, "boundari": 5, "map": 5, "mixtur": 5, "gaussian": 5, "low": 5, "degre": 5, "student": 5, "distribut": [5, 21], "data": [5, 6, 9, 10, 11], "an": 6, "introduc": 6, "creat": 6, "fit": 6, "plot": 6, "rim": [7, 14], "comput": 8, "time": 8, "celeux_on": 9, "celeux_two": 10, "draw_gmm": 11, "linearmmd": 12, "linearwasserstein": 13, "mlpmmd": 15, "mlpwasserstein": 16, "sparselinearmmd": 17, "sparsemlpmmd": 18, "welcom": 19, "document": 19, "content": [19, 21], "A": 19, "packag": [19, 21], "discrimin": [19, 20, 21], "instal": 19, "refer": [19, 20], "acknowledg": 19, "quick": 20, "start": 20, "what": [20, 21], "i": 20, "do": 20, "user": 21, "guid": 21, "which": 21, "ar": 21, "implement": 21, "avail": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"GEMCLUS API": [[0, "gemclus-api"]], "Clustering models": [[0, "clustering-models"]], "Dense models": [[0, "dense-models"]], "Sparse models": [[0, "sparse-models"]], "Dataset generation": [[0, "dataset-generation"]], "General examples": [[1, "general-examples"]], "Basic GEMINI": [[1, "basic-gemini"]], "Feature selection using the Sparse MMD OvO (Logistic regression)": [[2, "feature-selection-using-the-sparse-mmd-ovo-logistic-regression"]], "Load a simple synthetic dataset": [[2, "load-a-simple-synthetic-dataset"], [3, "load-a-simple-synthetic-dataset"], [4, "load-a-simple-synthetic-dataset"], [7, "load-a-simple-synthetic-dataset"]], "Train the model": [[2, "train-the-model"], [3, "train-the-model"], [4, "train-the-model"], [7, "train-the-model"]], "Path results": [[2, "path-results"], [3, "path-results"], [4, "path-results"]], "Final Clustering": [[2, "final-clustering"], [3, "final-clustering"], [5, "final-clustering"], [7, "final-clustering"]], "Feature selection using the Sparse MMD OvA (MLP)": [[3, "feature-selection-using-the-sparse-mmd-ova-mlp"]], "Grouped Feature selection with a linear model": [[4, "grouped-feature-selection-with-a-linear-model"]], "Example of decision boundary map for a mixture of Gaussian and low-degree Student distributions": [[5, "example-of-decision-boundary-map-for-a-mixture-of-gaussian-and-low-degree-student-distributions"]], "Generate the data": [[5, "generate-the-data"]], "Train the model for clustering": [[5, "train-the-model-for-clustering"]], "An introducing example to clustering with an MLP and the MMD GEMINI": [[6, "an-introducing-example-to-clustering-with-an-mlp-and-the-mmd-gemini"]], "Generate data": [[6, "generate-data"]], "Create the MLP clustering model and fit it": [[6, "create-the-mlp-clustering-model-and-fit-it"]], "Plot the final clustering": [[6, "plot-the-final-clustering"]], "Simple logistic regression with RIM": [[7, "simple-logistic-regression-with-rim"]], "Computation times": [[8, "computation-times"]], "gemclus.data.celeux_one": [[9, "gemclus-data-celeux-one"]], "Examples using gemclus.data.celeux_one": [[9, "examples-using-gemclus-data-celeux-one"]], "gemclus.data.celeux_two": [[10, "gemclus-data-celeux-two"]], "gemclus.data.draw_gmm": [[11, "gemclus-data-draw-gmm"]], "gemclus.linear.LinearMMD": [[12, "gemclus-linear-linearmmd"]], "gemclus.linear.LinearWasserstein": [[13, "gemclus-linear-linearwasserstein"]], "Examples using gemclus.linear.LinearWasserstein": [[13, "examples-using-gemclus-linear-linearwasserstein"]], "gemclus.linear.RIM": [[14, "gemclus-linear-rim"]], "Examples using gemclus.linear.RIM": [[14, "examples-using-gemclus-linear-rim"]], "gemclus.mlp.MLPMMD": [[15, "gemclus-mlp-mlpmmd"]], "Examples using gemclus.mlp.MLPMMD": [[15, "examples-using-gemclus-mlp-mlpmmd"]], "gemclus.mlp.MLPWasserstein": [[16, "gemclus-mlp-mlpwasserstein"]], "gemclus.sparse.SparseLinearMMD": [[17, "gemclus-sparse-sparselinearmmd"]], "Examples using gemclus.sparse.SparseLinearMMD": [[17, "examples-using-gemclus-sparse-sparselinearmmd"]], "gemclus.sparse.SparseMLPMMD": [[18, "gemclus-sparse-sparsemlpmmd"]], "Examples using gemclus.sparse.SparseMLPMMD": [[18, "examples-using-gemclus-sparse-sparsemlpmmd"]], "Welcome to GemClus documentation!": [[19, "welcome-to-gemclus-documentation"]], "Contents": [[19, "contents"]], "GEMCLUS - A package for discriminative clustering using GEMINI": [[19, "gemclus-a-package-for-discriminative-clustering-using-gemini"]], "Installation": [[19, "installation"]], "Reference": [[19, "reference"]], "Acknowledgements": [[19, "acknowledgements"]], "Quick start on gemclus": [[20, "quick-start-on-gemclus"]], "What is GEMINI": [[20, "what-is-gemini"]], "Doing discriminative clustering": [[20, "doing-discriminative-clustering"]], "Selecting features in clustering": [[20, "selecting-features-in-clustering"]], "References": [[20, "references"]], "User Guide": [[21, "user-guide"]], "Content of the package": [[21, "content-of-the-package"]], "Which GEMINIs are implemented": [[21, "which-geminis-are-implemented"]], "What discriminative distributions are available": [[21, "what-discriminative-distributions-are-available"]], "Basic examples": [[21, "basic-examples"]]}, "indexentries": {"celeux_one() (in module gemclus.data)": [[9, "gemclus.data.celeux_one"]], "celeux_two() (in module gemclus.data)": [[10, "gemclus.data.celeux_two"]], "draw_gmm() (in module gemclus.data)": [[11, "gemclus.data.draw_gmm"]], "linearmmd (class in gemclus.linear)": [[12, "gemclus.linear.LinearMMD"]], "__init__() (gemclus.linear.linearmmd method)": [[12, "gemclus.linear.LinearMMD.__init__"]], "linearwasserstein (class in gemclus.linear)": [[13, "gemclus.linear.LinearWasserstein"]], "__init__() (gemclus.linear.linearwasserstein method)": [[13, "gemclus.linear.LinearWasserstein.__init__"]], "rim (class in gemclus.linear)": [[14, "gemclus.linear.RIM"]], "__init__() (gemclus.linear.rim method)": [[14, "gemclus.linear.RIM.__init__"]], "mlpmmd (class in gemclus.mlp)": [[15, "gemclus.mlp.MLPMMD"]], "__init__() (gemclus.mlp.mlpmmd method)": [[15, "gemclus.mlp.MLPMMD.__init__"]], "mlpwasserstein (class in gemclus.mlp)": [[16, "gemclus.mlp.MLPWasserstein"]], "__init__() (gemclus.mlp.mlpwasserstein method)": [[16, "gemclus.mlp.MLPWasserstein.__init__"]], "sparselinearmmd (class in gemclus.sparse)": [[17, "gemclus.sparse.SparseLinearMMD"]], "__init__() (gemclus.sparse.sparselinearmmd method)": [[17, "gemclus.sparse.SparseLinearMMD.__init__"]], "sparsemlpmmd (class in gemclus.sparse)": [[18, "gemclus.sparse.SparseMLPMMD"]], "__init__() (gemclus.sparse.sparsemlpmmd method)": [[18, "gemclus.sparse.SparseMLPMMD.__init__"]]}})