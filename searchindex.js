Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/plot_feature_selection_linear", "auto_examples/plot_feature_selection_mlp", "auto_examples/plot_grouped_selection", "auto_examples/plot_gstm", "auto_examples/plot_intro_mlp_mmd", "auto_examples/plot_moon_clustering", "auto_examples/plot_rim", "auto_examples/sg_execution_times", "generated/gemclus.data.celeux_one", "generated/gemclus.data.celeux_two", "generated/gemclus.data.draw_gmm", "generated/gemclus.data.gstm", "generated/gemclus.data.multivariate_student_t", "generated/gemclus.linear.LinearMMD", "generated/gemclus.linear.LinearWasserstein", "generated/gemclus.linear.RIM", "generated/gemclus.mlp.MLPMMD", "generated/gemclus.mlp.MLPWasserstein", "generated/gemclus.sparse.SparseLinearMMD", "generated/gemclus.sparse.SparseMLPMMD", "index", "quick_start", "user_guide"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/plot_feature_selection_linear.rst", "auto_examples/plot_feature_selection_mlp.rst", "auto_examples/plot_grouped_selection.rst", "auto_examples/plot_gstm.rst", "auto_examples/plot_intro_mlp_mmd.rst", "auto_examples/plot_moon_clustering.rst", "auto_examples/plot_rim.rst", "auto_examples/sg_execution_times.rst", "generated/gemclus.data.celeux_one.rst", "generated/gemclus.data.celeux_two.rst", "generated/gemclus.data.draw_gmm.rst", "generated/gemclus.data.gstm.rst", "generated/gemclus.data.multivariate_student_t.rst", "generated/gemclus.linear.LinearMMD.rst", "generated/gemclus.linear.LinearWasserstein.rst", "generated/gemclus.linear.RIM.rst", "generated/gemclus.mlp.MLPMMD.rst", "generated/gemclus.mlp.MLPWasserstein.rst", "generated/gemclus.sparse.SparseLinearMMD.rst", "generated/gemclus.sparse.SparseMLPMMD.rst", "index.rst", "quick_start.rst", "user_guide.rst"], "titles": ["GEMCLUS API", "General examples", "Feature selection using the Sparse MMD OvO (Logistic regression)", "Feature selection using the Sparse MMD OvA (MLP)", "Grouped Feature selection with a linear model", "Example of decision boundary map for a mixture of Gaussian and low-degree Student distributions", "An introducing example to clustering with an MLP and the MMD GEMINI", "Drawing a decision boundary between two interlacing moons", "Simple logistic regression with RIM", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.celeux_one", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.celeux_two", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.draw_gmm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.gstm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.data</span></code>.multivariate_student_t", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.LinearMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.LinearWasserstein", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.linear</span></code>.RIM", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.mlp</span></code>.MLPMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.mlp</span></code>.MLPWasserstein", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.sparse</span></code>.SparseLinearMMD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gemclus.sparse</span></code>.SparseMLPMMD", "Welcome to GemClus documentation!", "Quick start on gemclus", "User guide : contents"], "terms": {"The": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "gemini": [0, 2, 3, 4, 5, 7, 9, 13, 15, 16, 17, 18, 19, 20, 21], "packag": [0, 23], "current": [0, 15, 16, 18, 19, 20, 21, 24], "contain": [0, 12, 15, 16, 17, 18, 19, 20, 21], "simpl": [0, 1, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "mlp": [0, 1, 5, 7, 9, 21, 23], "logist": [0, 1, 3, 4, 9, 10, 15, 16, 17, 20, 21, 24], "regress": [0, 1, 3, 4, 9, 10, 15, 16, 17, 20, 21, 24], "all": [0, 1, 2, 3, 4, 7, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24], "featur": [0, 1, 5, 6, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 24], "well": [0, 5, 15, 16, 17, 18, 19, 20, 21, 22, 24], "sparsiti": [0, 20, 21, 23, 24], "constrain": [0, 4, 24], "variant": 0, "we": [1, 2, 3, 4, 5, 7, 8, 22, 23, 24], "give": [1, 15, 16, 17, 18, 19, 20, 21, 23], "here": [1, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23], "some": [1, 4, 22, 24], "how": [1, 2, 3, 4, 8, 10, 13, 23, 24], "us": [1, 4, 7, 8, 9, 15, 23, 24], "our": [1, 3, 4, 7, 22, 23], "base": [1, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24], "model": [1, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24], "an": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24], "introduc": [1, 9, 18], "cluster": [1, 4, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 24], "mmd": [1, 9, 10, 15, 16, 17, 18, 19, 20, 21, 24], "select": [1, 9, 10, 11, 20, 21, 24], "spars": [1, 4, 7, 9, 10, 15, 16, 17, 18, 19, 23, 24], "ovo": [1, 6, 9, 10, 15, 16, 18, 19, 20, 21, 23, 24], "rim": [1, 9], "decis": [1, 8, 9, 13, 16, 19, 24], "boundari": [1, 8, 9, 13, 16, 19, 24], "map": [1, 9, 13, 15, 16, 17, 18, 19, 20, 21], "mixtur": [1, 8, 9, 10, 11, 12, 13, 16], "gaussian": [1, 2, 3, 8, 9, 10, 11, 12, 13, 16], "low": [1, 9, 13, 16], "degre": [1, 9, 13, 14, 16], "student": [1, 9, 13, 14, 16], "distribut": [1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23], "group": [1, 3, 9, 20, 21, 24], "linear": [1, 5, 7, 8, 9, 18, 19, 20, 21, 24], "ova": [1, 9, 15, 18, 19, 20, 21, 23, 24], "download": [1, 2, 3, 4, 5, 6, 7, 8], "python": [1, 2, 3, 4, 5, 6, 7, 8], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "code": [1, 2, 3, 4, 5, 6, 7, 8], "auto_examples_python": 1, "zip": 1, "jupyt": [1, 2, 3, 4, 5, 6, 7, 8], "notebook": [1, 2, 3, 4, 5, 6, 7, 8], "auto_examples_jupyt": 1, "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 24], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8], "go": [2, 3, 4, 5, 6, 7, 8, 22], "end": [2, 3, 4, 5, 6, 7, 8], "full": [2, 3, 4, 5, 6, 7, 8], "exampl": [2, 3, 4, 7, 8, 9, 15, 22], "In": [2, 3, 4, 6, 8, 13, 22, 23, 24], "thi": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "ask": [2, 3, 4, 23], "gemclu": [2, 3, 4, 5, 6, 7, 8, 24], "sparselinearmmd": [2, 4, 21, 24], "perform": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "where": [2, 3, 4, 5, 7, 15, 16, 17, 18, 19, 20, 21], "regularis": [2, 3, 4, 8, 17], "penalti": [2, 3, 4, 8, 17, 20, 21, 24], "i": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24], "progress": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21], "increas": [2, 3, 4, 20, 21], "until": [2, 3, 4, 20, 21], "2": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24], "ar": [2, 3, 4, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20, 21, 23], "discard": [2, 3, 4], "keep": [2, 3, 24], "best": [2, 3, 20, 21], "weight": [2, 3, 15, 16, 17, 18, 19, 20, 21], "minimum": [2, 3, 20, 21], "number": [2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "maintain": [2, 3], "score": [2, 3, 4, 8, 15, 16, 17, 18, 19, 20, 21, 23], "close": [2, 3, 10, 13], "90": [2, 3], "maximum": [2, 3, 15, 16, 17, 18, 19, 20, 21], "valu": [2, 3, 15, 16, 17, 18, 19, 20, 21], "encount": [2, 3], "dure": [2, 3, 15, 16, 17, 18, 19, 20, 21], "consist": [2, 3, 4, 8, 15, 16, 17, 18, 19, 20, 21, 23], "3": [2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23], "isotrop": [2, 3, 10], "so": [2, 3, 5, 7, 15, 16, 17, 18, 19, 20, 21, 24], "find": [2, 3, 4, 5, 7, 22], "5d": 2, "20": [2, 10, 18, 19, 21], "noisi": [2, 3, 4, 10, 11], "variabl": [2, 3, 4, 10, 11, 20, 21], "thu": [2, 3, 4, 23], "optim": [2, 3, 4, 7], "solut": [2, 3, 4, 7, 20, 21], "should": [2, 3, 4], "onli": [2, 3, 4, 5, 20, 21, 23, 24], "5": [2, 3, 4, 5, 6, 7, 8, 10, 20, 21], "relev": [2, 3, 4], "suffici": [2, 3, 4], "get": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23], "correct": [2, 3, 4], "from": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "matplotlib": [2, 3, 4, 5, 6, 7, 8], "import": [2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 23], "pyplot": [2, 3, 4, 5, 6, 7, 8], "plt": [2, 3, 4, 5, 6, 7, 8], "data": [2, 4, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "celeux_on": 2, "numpi": [2, 3, 4, 5, 7, 8, 22], "np": [2, 3, 4, 5, 7, 8], "sklearn": [2, 3, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24], "metric": [2, 15, 16, 17, 18, 19, 20, 21, 24], "gener": [2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "sampl": [2, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "separ": [2, 3, 8], "addit": [2, 10, 11, 23], "p": [2, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "independ": [2, 10, 23], "x": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24], "y": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24], "n": [2, 4, 5, 10, 11, 12, 13, 14], "300": [2, 10], "mu": [2, 10], "1": [2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20, 21, 23], "7": [2, 3, 4, 10], "random_st": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21], "creat": [2, 3, 4, 7, 8], "just": [2, 3, 4, 8], "call": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21], "method": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24], "iter": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21], "through": [2, 3, 4, 21, 22], "gradient": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21], "descent": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21], "clf": [2, 3, 4, 5, 6, 8, 15, 16, 17, 18, 19, 20, 21], "alpha": [2, 3, 4, 5, 7, 8, 13, 20, 21], "true": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 23, 24], "search": [2, 3, 4], "elimin": [2, 3, 4, 21], "best_weight": [2, 3, 4, 20, 21], "n_featur": [2, 3, 4, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21], "take": [2, 3, 4, 5, 8, 23], "look": [2, 3, 4, 8, 23], "decreas": [2, 3], "print": [2, 3, 4, 8, 15, 16, 17, 18, 19, 20, 21], "f": [2, 3, 4, 13, 20, 21, 22, 23], "top": [2, 3, 4, 5, 20, 21], "wa": [2, 3, 4, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "max": [2, 3, 4, 7, 8], "which": [2, 3, 4, 7, 8, 10, 11, 12, 13, 20, 21, 23], "settl": [2, 3, 4], "optimum": [2, 3, 4], "9": [2, 3, 4, 20, 21], "highlight": [2, 3], "along": [2, 3, 7], "titl": [2, 3, 22], "depend": [2, 3, 4, 11, 15, 16, 17, 18, 19, 20, 21], "plot": [2, 3, 5], "xlabel": [2, 3, 5, 6, 8], "ylabel": [2, 3, 5, 6, 8], "ylim": [2, 3, 5], "show": [2, 3, 4, 5, 6, 7, 8], "expect": [2, 5, 23], "first": [2, 18, 19, 21, 23], "linalg": [2, 3, 4], "norm": [2, 3, 4, 24], "axi": [2, 3, 4, 7], "ord": [2, 3, 4], "838372528505907": [], "1481320181509105": [], "8333188163358196": [], "arrai": [2, 3, 4, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21], "4": [2, 3, 4, 5, 11], "now": [2, 3, 5, 8], "evalu": [2, 15, 16, 17, 18, 19, 20, 21], "predict": [2, 3, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 23], "y_pred": [2, 3, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21], "ari": 2, "adjusted_rand_scor": 2, "8221373771284672": [], "total": [2, 3, 4, 5, 6, 7, 8, 9], "run": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "time": [2, 3, 4, 5, 6, 7, 8, 23], "script": [2, 3, 4, 5, 6, 7, 8], "minut": [2, 3, 4, 5, 6, 7, 8], "246": [], "second": [2, 3, 4, 5, 6, 7, 8], "plot_feature_selection_linear": [2, 9], "py": [2, 3, 4, 5, 6, 7, 8, 9], "ipynb": [2, 3, 4, 5, 6, 7, 8], "sparsemlpmmd": [3, 20], "2d": [3, 11, 12], "48": 3, "make_blob": [3, 6, 8], "center": [3, 6, 8], "cluster_std": [3, 6, 8], "n_sampl": [3, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21], "200": [3, 5, 6, 7, 8], "add": [3, 24], "extra": 3, "random": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "seed": [3, 4], "concaten": [3, 4, 10], "normal": [3, 4], "scale": [3, 10, 12, 14, 22], "size": [3, 4, 7, 15, 16, 17, 18, 19, 20, 21], "figur": 3, "figsiz": 3, "10": [3, 4, 5, 8, 14, 20, 21, 23], "subplot": 3, "lasso": [3, 20, 21, 24], "tight_layout": 3, "5192633113381595": 3, "6735427201341286": 3, "5061884481207157": 3, "x_0": [3, 6, 8], "x_1": [3, 6, 8], "x_2": [3, 6, 8], "ax0": [3, 6, 8], "scatter": [3, 4, 5, 6, 7, 8], "c": [3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 23], "crimson": [3, 6, 8], "": [3, 6, 8, 15, 16, 17, 18, 19, 20, 21], "50": [3, 4, 5, 6, 7, 8], "ax1": [3, 6, 8], "deepskyblu": [3, 6, 8], "ax2": [3, 6, 8], "darkgreen": [3, 6, 8], "leg": [3, 6, 8], "legend": [3, 6, 8], "loc": [3, 6, 8, 12, 14], "upper": [3, 6, 8], "left": [3, 6, 8, 23], "fancybox": [3, 6, 8], "scatterpoint": [3, 6, 8], "get_fram": [3, 6, 8], "set_alpha": [3, 6, 8], "11": 4, "970": [], "plot_feature_selection_mlp": [3, 9], "moreov": [4, 23], "produc": 4, "categor": 4, "one": [4, 15, 16, 18, 19, 20, 21, 23, 24], "hot": [4, 20, 21], "encod": [4, 20, 21], "consid": [4, 15, 16, 17, 18, 19, 20, 21], "altogeth": 4, "option": [4, 7, 15, 16, 17, 18, 19, 20, 21], "binomi": 4, "paramet": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "8": 4, "inform": [4, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "outcom": 4, "multinomi": 4, "x1_class_1": 4, "pval": [4, 12], "05": [4, 7, 20, 21], "45": 4, "x2_class_1": 4, "x_class_1": 4, "x1_class_2": 4, "x2_class_2": 4, "x_class_2": 4, "x_inform": 4, "x_nois": 4, "100": 4, "assign": [4, 15, 16, 17, 18, 19, 20, 21], "repeat": 4, "arang": 4, "final": 4, "write": 4, "out": [4, 22], "partit": [4, 20, 21], "rang": 4, "shape": [4, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "visualis": 4, "def": 4, "rand_jitt": 4, "return": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "randn": 4, "len": 4, "01": [4, 20, 21], "argmax": [4, 8], "red": 4, "blue": [4, 5], "6": [4, 5, 7], "12": 4, "13": 4, "14": 4, "15": 4, "lower": 4, "threshold": [4, 7], "80": 4, "keep_threshold": [4, 20, 21], "3027278385416854": [], "5893356021541236": 4, "4304020419387113": 4, "981": [], "plot_grouped_select": [4, 9], "retak": [5, 7], "experi": [5, 7], "origin": [5, 7, 12, 22, 23, 24], "paper": [5, 7, 17, 24], "want": [5, 7, 24], "incorpor": 5, "freedom": [5, 13, 14], "t": [5, 13, 14, 15, 16, 17, 18, 19, 20, 21], "consequ": 5, "mai": [5, 23], "seem": [5, 24], "like": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23], "outlier": 5, "unlik": 5, "done": 5, "linearwasserstein": [5, 15], "instead": 5, "far": [5, 24], "apart": 5, "mean": [5, 10, 12, 13], "df": [5, 13, 14], "multivari": 14, "ones": [15, 16, 18, 19, 20, 21], "proport": 12, "bincount": [], "sort": [], "covari": 12, "ey": [], "k": 23, "multivariate_norm": [], "nx": [], "zero": [], "u": [8, 22], "chisquar": [], "reshap": [5, 7, 8], "sqrt": [], "expand_dim": [], "n_cluster": [5, 7, 8, 15, 16, 17, 18, 19, 20, 21, 23], "fit_predict": [5, 7, 15, 16, 17, 18, 19, 20, 21], "grid": 5, "input": [5, 8, 15, 16, 17, 18, 19, 20, 21, 24], "help": [5, 22], "draw": [1, 5, 9, 10, 11, 12, 13, 14, 19], "x_val": [5, 7, 8], "linspac": [5, 7, 8], "num": [5, 7, 8], "y_val": [5, 7, 8], "xx": [5, 7, 8], "yy": [5, 7, 8], "meshgrid": [5, 7, 8], "grid_input": [5, 7, 8], "c_": [5, 7, 8], "ravel": [5, 7, 8], "zz": [5, 7, 8], "contourf": [5, 7, 8], "cmap": [5, 7], "reds_r": 5, "xlim": 5, "18": [], "278": [], "plot_gstm": [5, 9], "base_gemini": 6, "densemmdovo": 6, "mlpmmd": [6, 19, 23], "dataset": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "environ": [6, 8], "pleas": [6, 8, 22, 23], "rerun": [6, 8], "cell": [6, 8], "html": [6, 8], "represent": [6, 8, 18, 19, 21], "trust": [6, 8], "On": [6, 8, 20, 21], "github": [6, 8], "unabl": [6, 8], "render": [6, 8], "try": [6, 8, 22], "load": 6, "page": [6, 8], "nbviewer": [6, 8], "org": [6, 8], "mlpmmdmlpmmd": 6, "673": [], "plot_intro_mlp_mmd": [6, 9], "mutual": [8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "propos": [8, 15, 16, 17, 18, 19, 20, 21, 23, 24], "kraus": [8, 17], "et": [8, 10, 11, 17, 21, 23], "al": [8, 10, 11, 17, 21, 23], "2010": [8, 17], "maximis": [8, 15, 16, 17, 18, 19, 23], "under": [8, 20, 21, 22], "ell_2": [8, 17], "do": [7, 8, 22], "fit": [7, 8, 15, 16, 17, 18, 19, 20, 21, 23], "rimrim": 8, "let": 8, "accord": 8, "probabl": [8, 15, 16, 17, 18, 19, 20, 21, 23], "grad": 8, "min": [7, 8], "grid_pr": 8, "predict_proba": [8, 15, 16, 17, 18, 19, 20, 21], "isol": 8, "level": 8, "021396049320560717": 8, "427": [], "plot_rim": [8, 9], "00": 9, "44": [], "576": [], "execut": 9, "auto_exampl": 9, "file": 9, "mb": 9, "07": [], "none": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "tupl": [10, 11, 12], "ndarrai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "compon": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21], "respect": [10, 23], "over": 10, "dimens": 10, "excess": 10, "taken": [10, 11], "celeux": [10, 11], "section": [10, 11], "int": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "default": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "float": [10, 13, 15, 16, 17, 18, 19, 20, 21], "control": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21], "each": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21], "other": 10, "randomst": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "instanc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "determin": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "creation": [10, 11, 12, 13, 14], "pass": [7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "reproduc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "output": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "across": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "multipl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "gmm": [10, 11, 12, 13], "drawn": [10, 11, 12, 13, 14, 23], "refer": [10, 11, 13, 15, 16, 17, 18, 19, 20, 21], "g": [10, 11], "martin": [10, 11], "magniett": [10, 11], "m": [10, 11, 13, 21, 22, 23], "l": [10, 11, 13, 20, 21, 22, 23], "maugi": [10, 11], "rabusseau": [10, 11], "rafteri": [10, 11], "A": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23], "e": [10, 11, 22, 23], "2014": [10, 11], "compar": [10, 11, 23], "regular": [10, 11, 17], "approach": [10, 11], "journal": [10, 11, 23], "de": [10, 11], "la": [10, 11], "societ": [10, 11], "francais": [10, 11], "statistiqu": [10, 11], "155": [10, 11], "57": [10, 11], "71": [10, 11], "2000": 11, "linearli": 11, "non": 11, "sigma": [], "pi": [], "element": 12, "list": [12, 20, 21], "1d": 12, "class": [15, 16, 17, 18, 19, 20, 21, 23, 24], "max_it": [15, 16, 17, 18, 19, 20, 21], "1000": [15, 16, 17, 18, 19, 20, 21], "learning_r": [7, 15, 16, 17, 18, 19, 20, 21], "001": [15, 16, 17, 18, 19, 20, 21], "kernel": [15, 18, 20, 21, 24], "solver": [15, 16, 17, 18, 19, 20, 21], "adam": [15, 16, 17, 18, 19, 20, 21], "fals": [7, 15, 16, 17, 18, 19, 20, 21], "verbos": [15, 16, 17, 18, 19, 20, 21], "implement": [15, 16, 17, 18, 19, 20, 21, 22], "form": [15, 16, 17, 18, 19, 20, 21], "neuron": [15, 16, 17, 18, 19, 20, 21], "neural": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "network": [15, 16, 17, 18, 19, 20, 21, 23], "epoch": [15, 16, 17, 18, 19, 20, 21], "singl": [15, 16, 17, 18, 19, 20, 21], "1e": [7, 15, 16, 17, 18, 19, 20, 21], "initi": [15, 16, 17, 18, 19, 20, 21], "learn": [15, 16, 17, 18, 19, 20, 21, 22, 23], "rate": [15, 16, 17, 18, 19, 20, 21], "It": [15, 16, 17, 18, 19, 20, 21, 23], "step": [15, 16, 17, 18, 19, 20, 21], "updat": [15, 16, 17, 18, 19, 20, 21], "additive_chi2": [15, 18, 20, 21], "chi2": [15, 18, 20, 21], "cosin": [15, 16, 18, 19, 20, 21], "poli": [15, 18, 20, 21], "polynomi": [15, 18, 20, 21], "rbf": [15, 18, 20, 21], "laplacian": [15, 18, 20, 21], "sigmoid": [15, 18, 20, 21], "combin": [15, 16, 18, 19, 20, 21], "object": [15, 16, 17, 18, 19, 20, 21, 23], "correspond": [15, 16, 18, 19, 20, 21], "kernel_param": [15, 18, 20, 21], "bool": [15, 16, 17, 18, 19, 20, 21], "whether": [15, 16, 17, 18, 19, 20, 21], "sgd": [15, 16, 17, 18, 19, 20, 21], "optimis": [15, 16, 17, 18, 19, 20, 21], "stochast": [15, 16, 17, 18, 19, 20, 21], "kingma": [15, 16, 17, 18, 19, 20, 21], "diederik": [15, 16, 17, 18, 19, 20, 21], "jimmi": [15, 16, 17, 18, 19, 20, 21], "ba": [15, 16, 17, 18, 19, 20, 21], "messag": [15, 16, 17, 18, 19, 20, 21], "stdout": [15, 16, 17, 18, 19, 20, 21], "bia": [15, 16, 17, 18, 19, 20, 21], "initialis": [15, 16, 17, 18, 19, 20, 21], "result": [15, 16, 17, 18, 19, 20, 21, 23], "function": [7, 15, 16, 17, 18, 19, 20, 21, 22, 24], "train": [15, 16, 17, 18, 19, 20, 21, 23], "wasserstein": [15, 16, 18, 19, 24], "generalis": [13, 15, 16, 18, 19, 20, 21, 22, 23], "discrimin": [13, 15, 16, 17, 18, 19, 20, 21], "loui": [15, 16, 18, 19, 20, 21, 22], "ohl": [13, 15, 16, 18, 19, 20, 21, 22, 23], "pierr": [15, 16, 18, 19, 20, 21, 22], "alexandr": [15, 16, 18, 19, 20, 21, 22], "mattei": [13, 15, 16, 18, 19, 20, 21, 22, 23], "charl": [15, 16, 18, 19, 20, 21, 22], "bouveyron": [13, 15, 16, 18, 19, 20, 21, 22, 23], "warith": [15, 16, 18, 19, 20, 21, 22], "harchaoui": [13, 15, 16, 18, 19, 20, 21, 22, 23], "micka\u00ebl": [15, 16, 18, 19, 20, 21], "leclercq": [13, 15, 16, 18, 19, 20, 21, 22, 23], "arnaud": [15, 16, 18, 19, 20, 21, 22], "droit": [13, 15, 16, 18, 19, 20, 21, 22, 23], "freder": [15, 16, 18, 19, 20, 21, 22], "preciosio": [15, 16, 18, 19, 20, 21], "load_iri": [15, 16, 17, 18, 19, 20, 21, 23], "return_x_i": [15, 16, 17, 18, 19, 20, 21, 23], "6949190522657158": 15, "attribut": [15, 16, 17, 18, 19, 20, 21], "w_": [15, 16, 17, 20], "b_": [15, 16, 17, 20], "bias": [15, 16, 17, 18, 19, 20, 21], "optimiser_": [15, 16, 17, 18, 19, 20, 21], "adamoptim": [15, 16, 17, 18, 19, 20, 21], "sgdoptim": [15, 16, 17, 18, 19, 20, 21], "algorithm": [7, 15, 16, 17, 18, 19, 20, 21, 24], "chosen": [15, 16, 17, 18, 19, 20, 21], "labels_": [15, 16, 17, 18, 19, 20, 21], "label": [15, 16, 17, 18, 19, 20, 21], "were": [15, 16, 17, 18, 19, 20, 21], "n_iter_": [15, 16, 17, 18, 19, 20, 21], "took": [15, 16, 17, 18, 19, 20, 21], "converg": [15, 16, 17, 18, 19, 20, 21, 23], "__init__": [15, 16, 17, 18, 19, 20, 21], "euclidean": [7, 16, 19, 24], "logisti": 16, "l2": [16, 19], "l1": [16, 19], "manhattan": [16, 19], "cityblock": [16, 19], "paired_dist": [16, 19], "linearmmd": [16, 17, 20], "6509087196143133": 16, "n_features_in": [16, 17], "reg": 17, "classic": 17, "follow": [17, 22], "framework": 17, "describ": [17, 20, 21], "hyperparamet": 17, "maxim": [17, 20, 21], "ryan": 17, "gome": 17, "andrea": 17, "pietro": 17, "perona": 17, "00962912118121384": 17, "n_hidden_dim": [18, 19, 21], "two": [1, 9, 18, 19, 20, 23], "layer": [18, 19, 20, 21, 24], "hidden": [18, 19, 21, 24], "mlpwasserstein": [7, 18], "7592155845461592": 18, "w1_": [18, 19, 21], "b1_": [18, 19, 21], "w2_": [18, 19, 21], "b2_": [18, 19, 21], "h_": [18, 19, 21], "after": [18, 19, 20, 21], "7615502432434385": 19, "version": [20, 21, 23, 24], "vanilla": [20, 21], "variat": [20, 21], "bring": [20, 21, 23], "constraint": [20, 21], "ensur": [20, 21], "via": 20, "proxim": [20, 21], "variou": [20, 21], "set": [15, 16, 17, 18, 19, 20, 21, 23, 24], "must": [20, 21], "indic": [20, 21], "repres": [20, 21], "can": [20, 21, 22, 23, 24], "typic": [20, 21], "scheme": [20, 21], "lassonet": [20, 21, 23, 24], "architectur": [20, 21, 24], "lemhadri": [20, 21, 23], "ruan": [20, 21, 23], "abraham": [20, 21, 23], "tibshirani": [20, 21, 23], "r": [20, 21, 23], "joint": [20, 21, 23, 24], "6940342321220005": 20, "skip": [21, 24], "connect": [21, 24], "inspir": [21, 23, 24], "2021": [21, 23], "hierarchi": 21, "coeffici": 21, "rel": 21, "strength": 21, "between": [1, 9, 19, 21, 23, 24], "7664211836410726": 21, "w_skip_": 21, "thank": 22, "you": [22, 23, 24], "check": [22, 23], "realli": 22, "pleasur": 22, "dedic": 22, "deriv": [22, 23, 24], "theori": [22, 23], "allow": 22, "without": [20, 21, 22, 23], "hypothes": 22, "provid": [22, 23, 24], "overal": 22, "small": [20, 21, 22], "start": [20, 21, 22], "user": [22, 23], "guid": [7, 22, 23], "api": [15, 16, 17, 18, 19, 20, 21, 22, 23], "tool": 22, "written": 22, "scikit": [22, 23], "compat": 22, "extens": [22, 24], "complet": 22, "link": 22, "announc": 22, "instruct": 22, "pip": 22, "librari": [22, 24], "requir": [22, 24], "coupl": 22, "scientif": 22, "scipi": [7, 22], "pot": 22, "If": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "work": [15, 16, 17, 18, 19, 20, 21, 22], "cite": 22, "neurip": 22, "w": [13, 22, 23], "precioso": [13, 22, 23], "2022": [13, 22, 23], "octob": [13, 22], "advanc": [13, 22, 23], "process": [13, 22, 23], "system": [13, 22, 23], "inproceed": 22, "ohl2022generalis": 22, "author": 22, "micka": 22, "booktitl": 22, "editor": 22, "alic": 22, "h": [22, 23], "oh": [22, 23], "alekh": 22, "agarw": [22, 23], "daniel": 22, "belgrav": [22, 23], "kyunghyun": 22, "cho": [22, 23], "year": 22, "url": 22, "http": 22, "openreview": 22, "net": 22, "forum": 22, "id": 22, "0oy3pia": 22, "adp": 22, "ha": [22, 23], "been": 22, "support": 22, "french": 22, "govern": 22, "3ia": 22, "c\u00f4te": 22, "d": [14, 22, 23], "azur": 22, "invest": 22, "futur": 22, "project": 22, "manag": 22, "nation": 22, "research": [22, 23], "agenc": 22, "anr": 22, "19": 22, "p3ia": 22, "0002": 22, "would": [7, 22], "also": 22, "franc": 22, "canada": 22, "fund": 22, "ffcr": 22, "contribut": 22, "partli": 22, "eu": 22, "horizon": 22, "2020": 22, "ai4media": 22, "contract": 22, "951911": 22, "mani": 22, "jhonatan": 22, "torr": 22, "hi": 22, "insight": 22, "develop": 22, "short": 23, "descript": 23, "hint": 23, "about": 23, "For": [23, 24], "more": [23, 24], "detail": 23, "definit": [14, 23], "its": 23, "public": 23, "stand": 23, "novel": 23, "type": 23, "measur": 23, "distanc": [7, 23, 24], "custer": 23, "p_": [23, 24], "theta": [23, 24], "v": 23, "mathbb": 23, "_": 23, "sim": 23, "right": 23, "y_1": 23, "y_2": 23, "specif": [23, 24], "involv": 23, "bay": 23, "theorem": 23, "easili": 23, "tractabl": 23, "cane": 23, "valuat": 23, "henc": 23, "ani": [20, 21, 23, 24], "parametr": 23, "assumpt": 23, "convent": [15, 16, 17, 18, 19, 20, 21, 23], "At": 23, "moment": 23, "report": 23, "fewer": 23, "than": [7, 20, 21, 23], "good": [20, 21, 23], "practic": 23, "sever": 23, "merg": 23, "avail": 23, "loss": 23, "your": 23, "own": 23, "further": 23, "improv": [20, 21, 23], "mainli": 23, "feel": 23, "interest": 23, "ed": 23, "machin": 23, "22": 23, "127": 23, "29": 23, "2023": [7, 23], "doi": 23, "48550": 23, "arxiv": 23, "2302": 23, "03391": 23, "both": 24, "present": [15, 16, 17, 18, 19, 20, 21, 24], "mode": 24, "ad": 24, "constructor": 24, "achiev": 24, "howev": 24, "regard": 24, "chose": 24, "becaus": [7, 24], "yield": 24, "worst": 24, "space": 24, "comput": [15, 16, 17, 18, 19, 20, 21, 24], "directli": 24, "pairwise_dist": [7, 24], "same": 24, "manner": 24, "pairwise_kernel": 24, "By": 24, "made": [20, 21, 24], "choic": 24, "forc": 24, "usag": 24, "multi": 24, "perceptron": 24, "flexibl": 24, "yet": 24, "express": 24, "enough": 24, "term": 24, "case": 24, "simpler": 24, "note": [7, 24], "induc": 24, "anoth": 24, "_basemmd": 24, "_basewasserstein": 24, "rewrit": 24, "_infer": 24, "_get_weight": 24, "_init_param": 24, "includ": 24, "matrix": [7, 14, 15, 16, 17, 18, 19, 20, 21], "ignor": [], "Not": [], "self": [15, 16, 17, 18, 19, 20, 21], "estim": [15, 16, 17, 18, 19, 20, 21], "vector": [15, 16, 17, 18, 19, 20, 21], "get_param": [15, 16, 17, 18, 19, 20, 21], "deep": [15, 16, 17, 18, 19, 20, 21], "subobject": [15, 16, 17, 18, 19, 20, 21], "param": [15, 16, 17, 18, 19, 20, 21], "dict": [15, 16, 17, 18, 19, 20, 21], "name": [15, 16, 17, 18, 19, 20, 21], "classifi": [15, 16, 17, 18, 19, 20, 21], "closest": [15, 16, 17, 18, 19, 20, 21], "seen": [15, 16, 17, 18, 19, 20, 21], "order": [15, 16, 17, 18, 19, 20, 21], "given": [15, 16, 17, 18, 19, 20, 21], "test": [15, 16, 17, 18, 19, 20, 21], "set_param": [15, 16, 17, 18, 19, 20, 21], "nest": [15, 16, 17, 18, 19, 20, 21], "pipelin": [15, 16, 17, 18, 19, 20, 21], "latter": [15, 16, 17, 18, 19, 20, 21], "have": [15, 16, 17, 18, 19, 20, 21], "__": [15, 16, 17, 18, 19, 20, 21], "possibl": [15, 16, 17, 18, 19, 20, 21], "path": [7, 20, 21], "alpha_multipli": [20, 21], "min_featur": [20, 21], "restore_best_weight": [20, 21], "early_stopping_factor": [20, 21], "99": [20, 21], "max_pati": [20, 21], "unfold": [20, 21], "geometr": [20, 21], "remain": [20, 21], "specifi": [20, 21], "amount": [20, 21], "histori": [20, 21], "differ": [20, 21], "kept": [20, 21], "certain": [20, 21], "percentag": [20, 21], "reduct": [20, 21], "retrain": [20, 21], "greater": [20, 21], "stop": [20, 21], "minim": [20, 21], "deem": [20, 21], "offer": [20, 21], "simultan": [20, 21], "few": [20, 21], "restor": [20, 21], "factor": [20, 21], "beyond": [20, 21], "upgrad": [20, 21], "too": [20, 21], "earli": [20, 21], "wait": [20, 21], "either": [20, 21], "befor": [20, 21], "length": [20, 21], "sequenti": [20, 21], "group_penalti": [20, 21], "interlac": [1, 9, 19], "moon": [1, 9, 19], "7282620220807194": 2, "030230878584606": 2, "7272077907261454": 2, "8850280359097036": 2, "013": 2, "162": 3, "302727838541685": 4, "333": 4, "gstm": 5, "batch_siz": [5, 15, 16, 17, 18, 19, 20, 21], "762": [5, 9], "655": 6, "face": 7, "To": 7, "trick": 7, "precomput": [7, 15, 16, 17, 18, 19, 20, 21], "desir": 7, "abl": 7, "csgraph": 7, "make_moon": 7, "nois": 7, "adjac": 7, "graph": 7, "edg": 7, "defin": 7, "less": 7, "quantil": 7, "pair": 7, "shortest": 7, "floyd_warshal": 7, "direct": 7, "unweight": 7, "replac": 7, "inf": 7, "isinf": 7, "cm": 7, "spectral": 7, "off": 7, "372": 7, "plot_moon_clust": [7, 9], "305": 8, "06": 9, "000": 9, "500": 13, "articl": 13, "locat": 13, "posit": 14, "semi": 14, "spread": 14, "batch": [15, 16, 17, 18, 19, 20, 21], "whole": [15, 16, 17, 18, 19, 20, 21], "affin": [15, 16, 17, 18, 19, 20, 21], "construct": [15, 16, 17, 18, 19, 20, 21], "otherwis": [15, 16, 17, 18, 19, 20, 21], "get_select": [20, 21], "retriev": [20, 21], "ind": [20, 21]}, "objects": {"gemclus.data": [[10, 0, 1, "", "celeux_one"], [11, 0, 1, "", "celeux_two"], [12, 0, 1, "", "draw_gmm"], [13, 0, 1, "", "gstm"], [14, 0, 1, "", "multivariate_student_t"]], "gemclus.linear": [[15, 1, 1, "", "LinearMMD"], [16, 1, 1, "", "LinearWasserstein"], [17, 1, 1, "", "RIM"]], "gemclus.linear.LinearMMD": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "fit_predict"], [15, 2, 1, "", "get_params"], [15, 2, 1, "", "predict"], [15, 2, 1, "", "predict_proba"], [15, 2, 1, "", "score"], [15, 2, 1, "", "set_params"]], "gemclus.linear.LinearWasserstein": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "fit_predict"], [16, 2, 1, "", "get_params"], [16, 2, 1, "", "predict"], [16, 2, 1, "", "predict_proba"], [16, 2, 1, "", "score"], [16, 2, 1, "", "set_params"]], "gemclus.linear.RIM": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "fit_predict"], [17, 2, 1, "", "get_params"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "predict_proba"], [17, 2, 1, "", "score"], [17, 2, 1, "", "set_params"]], "gemclus.mlp": [[18, 1, 1, "", "MLPMMD"], [19, 1, 1, "", "MLPWasserstein"]], "gemclus.mlp.MLPMMD": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "fit_predict"], [18, 2, 1, "", "get_params"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "predict_proba"], [18, 2, 1, "", "score"], [18, 2, 1, "", "set_params"]], "gemclus.mlp.MLPWasserstein": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "fit_predict"], [19, 2, 1, "", "get_params"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "predict_proba"], [19, 2, 1, "", "score"], [19, 2, 1, "", "set_params"]], "gemclus.sparse": [[20, 1, 1, "", "SparseLinearMMD"], [21, 1, 1, "", "SparseMLPMMD"]], "gemclus.sparse.SparseLinearMMD": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "fit"], [20, 2, 1, "", "fit_predict"], [20, 2, 1, "", "get_params"], [20, 2, 1, "", "get_selection"], [20, 2, 1, "", "path"], [20, 2, 1, "", "predict"], [20, 2, 1, "", "predict_proba"], [20, 2, 1, "", "score"], [20, 2, 1, "", "set_params"]], "gemclus.sparse.SparseMLPMMD": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "fit_predict"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_selection"], [21, 2, 1, "", "path"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "predict_proba"], [21, 2, 1, "", "score"], [21, 2, 1, "", "set_params"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"gemclu": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "api": 0, "cluster": [0, 2, 3, 5, 6, 7, 8, 22, 23], "model": [0, 2, 3, 4, 5, 6, 7, 8], "dens": 0, "spars": [0, 2, 3, 20, 21], "dataset": [0, 2, 3, 4, 8], "gener": [0, 1, 5, 6, 7], "exampl": [1, 5, 6, 10, 13, 16, 17, 18, 19, 20, 21, 24], "basic": [1, 24], "gemini": [1, 6, 22, 23, 24], "featur": [2, 3, 4, 23], "select": [2, 3, 4, 23], "us": [2, 3, 10, 13, 16, 17, 18, 19, 20, 21, 22], "mmd": [2, 3, 6], "ovo": 2, "logist": [2, 8], "regress": [2, 8], "load": [2, 3, 4, 8], "simpl": [2, 3, 4, 8], "synthet": [2, 3, 4, 8], "train": [2, 3, 4, 5, 7, 8], "path": [2, 3, 4], "result": [2, 3, 4], "final": [2, 3, 5, 6, 7, 8], "ova": 3, "mlp": [3, 6, 18, 19], "group": 4, "linear": [4, 15, 16, 17], "decis": [5, 7], "boundari": [5, 7], "map": 5, "mixtur": 5, "gaussian": 5, "low": 5, "degre": 5, "student": 5, "distribut": [5, 24], "data": [5, 6, 10, 11, 12, 13, 14], "an": 6, "introduc": 6, "creat": 6, "fit": 6, "plot": 6, "rim": [8, 17], "comput": [7, 9], "time": 9, "celeux_on": 10, "celeux_two": 11, "draw_gmm": 12, "linearmmd": 15, "linearwasserstein": 16, "mlpmmd": 18, "mlpwasserstein": 19, "sparselinearmmd": 20, "sparsemlpmmd": 21, "welcom": 22, "document": 22, "content": [22, 24], "A": 22, "packag": [22, 24], "discrimin": [22, 23, 24], "instal": 22, "refer": [22, 23], "acknowledg": 22, "quick": 23, "start": 23, "what": [23, 24], "i": 23, "do": 23, "user": 24, "guid": 24, "which": 24, "ar": 24, "implement": 24, "avail": 24, "return": [], "draw": 7, "between": 7, "two": 7, "interlac": 7, "moon": 7, "pre": 7, "specif": 7, "metric": 7, "sampl": 7, "gstm": 13, "multivariate_student_t": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"GEMCLUS API": [[0, "gemclus-api"]], "Clustering models": [[0, "clustering-models"]], "Dense models": [[0, "dense-models"]], "Sparse models": [[0, "sparse-models"]], "Dataset generation": [[0, "dataset-generation"]], "General examples": [[1, "general-examples"]], "Basic GEMINI": [[1, "basic-gemini"]], "Feature selection using the Sparse MMD OvO (Logistic regression)": [[2, "feature-selection-using-the-sparse-mmd-ovo-logistic-regression"]], "Load a simple synthetic dataset": [[2, "load-a-simple-synthetic-dataset"], [3, "load-a-simple-synthetic-dataset"], [4, "load-a-simple-synthetic-dataset"], [8, "load-a-simple-synthetic-dataset"]], "Train the model": [[2, "train-the-model"], [3, "train-the-model"], [4, "train-the-model"], [7, "train-the-model"], [8, "train-the-model"]], "Path results": [[2, "path-results"], [3, "path-results"], [4, "path-results"]], "Final Clustering": [[2, "final-clustering"], [3, "final-clustering"], [5, "final-clustering"], [7, "final-clustering"], [8, "final-clustering"]], "Feature selection using the Sparse MMD OvA (MLP)": [[3, "feature-selection-using-the-sparse-mmd-ova-mlp"]], "Grouped Feature selection with a linear model": [[4, "grouped-feature-selection-with-a-linear-model"]], "Example of decision boundary map for a mixture of Gaussian and low-degree Student distributions": [[5, "example-of-decision-boundary-map-for-a-mixture-of-gaussian-and-low-degree-student-distributions"]], "Generate the data": [[5, "generate-the-data"]], "Train the model for clustering": [[5, "train-the-model-for-clustering"]], "An introducing example to clustering with an MLP and the MMD GEMINI": [[6, "an-introducing-example-to-clustering-with-an-mlp-and-the-mmd-gemini"]], "Generate data": [[6, "generate-data"]], "Create the MLP clustering model and fit it": [[6, "create-the-mlp-clustering-model-and-fit-it"]], "Plot the final clustering": [[6, "plot-the-final-clustering"]], "Drawing a decision boundary between two interlacing moons": [[7, "drawing-a-decision-boundary-between-two-interlacing-moons"]], "Generate two interlacing moons": [[7, "generate-two-interlacing-moons"]], "Pre-compute a specific metric between samples": [[7, "pre-compute-a-specific-metric-between-samples"]], "Simple logistic regression with RIM": [[8, "simple-logistic-regression-with-rim"]], "Computation times": [[9, "computation-times"]], "gemclus.data.celeux_one": [[10, "gemclus-data-celeux-one"]], "Examples using gemclus.data.celeux_one": [[10, "examples-using-gemclus-data-celeux-one"]], "gemclus.data.celeux_two": [[11, "gemclus-data-celeux-two"]], "gemclus.data.draw_gmm": [[12, "gemclus-data-draw-gmm"]], "gemclus.data.gstm": [[13, "gemclus-data-gstm"]], "Examples using gemclus.data.gstm": [[13, "examples-using-gemclus-data-gstm"]], "gemclus.data.multivariate_student_t": [[14, "gemclus-data-multivariate-student-t"]], "gemclus.linear.LinearMMD": [[15, "gemclus-linear-linearmmd"]], "gemclus.linear.LinearWasserstein": [[16, "gemclus-linear-linearwasserstein"]], "Examples using gemclus.linear.LinearWasserstein": [[16, "examples-using-gemclus-linear-linearwasserstein"]], "gemclus.linear.RIM": [[17, "gemclus-linear-rim"]], "Examples using gemclus.linear.RIM": [[17, "examples-using-gemclus-linear-rim"]], "gemclus.mlp.MLPMMD": [[18, "gemclus-mlp-mlpmmd"]], "Examples using gemclus.mlp.MLPMMD": [[18, "examples-using-gemclus-mlp-mlpmmd"]], "gemclus.mlp.MLPWasserstein": [[19, "gemclus-mlp-mlpwasserstein"]], "Examples using gemclus.mlp.MLPWasserstein": [[19, "examples-using-gemclus-mlp-mlpwasserstein"]], "gemclus.sparse.SparseLinearMMD": [[20, "gemclus-sparse-sparselinearmmd"]], "Examples using gemclus.sparse.SparseLinearMMD": [[20, "examples-using-gemclus-sparse-sparselinearmmd"]], "gemclus.sparse.SparseMLPMMD": [[21, "gemclus-sparse-sparsemlpmmd"]], "Examples using gemclus.sparse.SparseMLPMMD": [[21, "examples-using-gemclus-sparse-sparsemlpmmd"]], "Welcome to GemClus documentation!": [[22, "welcome-to-gemclus-documentation"]], "Contents": [[22, "contents"]], "GEMCLUS - A package for discriminative clustering using GEMINI": [[22, "gemclus-a-package-for-discriminative-clustering-using-gemini"]], "Installation": [[22, "installation"]], "Reference": [[22, "reference"]], "Acknowledgements": [[22, "acknowledgements"]], "Quick start on gemclus": [[23, "quick-start-on-gemclus"]], "What is GEMINI": [[23, "what-is-gemini"]], "Doing discriminative clustering": [[23, "doing-discriminative-clustering"]], "Selecting features in clustering": [[23, "selecting-features-in-clustering"]], "References": [[23, "references"]], "User Guide": [[24, "user-guide"]], "Content of the package": [[24, "content-of-the-package"]], "Which GEMINIs are implemented": [[24, "which-geminis-are-implemented"]], "What discriminative distributions are available": [[24, "what-discriminative-distributions-are-available"]], "Basic examples": [[24, "basic-examples"]]}, "indexentries": {"celeux_one() (in module gemclus.data)": [[10, "gemclus.data.celeux_one"]], "celeux_two() (in module gemclus.data)": [[11, "gemclus.data.celeux_two"]], "draw_gmm() (in module gemclus.data)": [[12, "gemclus.data.draw_gmm"]], "gstm() (in module gemclus.data)": [[13, "gemclus.data.gstm"]], "multivariate_student_t() (in module gemclus.data)": [[14, "gemclus.data.multivariate_student_t"]], "linearmmd (class in gemclus.linear)": [[15, "gemclus.linear.LinearMMD"]], "__init__() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.__init__"]], "fit() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.fit"]], "fit_predict() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.fit_predict"]], "get_params() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.get_params"]], "predict() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.predict"]], "predict_proba() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.predict_proba"]], "score() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.score"]], "set_params() (gemclus.linear.linearmmd method)": [[15, "gemclus.linear.LinearMMD.set_params"]], "linearwasserstein (class in gemclus.linear)": [[16, "gemclus.linear.LinearWasserstein"]], "__init__() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.__init__"]], "fit() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.fit"]], "fit_predict() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.fit_predict"]], "get_params() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.get_params"]], "predict() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.predict"]], "predict_proba() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.predict_proba"]], "score() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.score"]], "set_params() (gemclus.linear.linearwasserstein method)": [[16, "gemclus.linear.LinearWasserstein.set_params"]], "rim (class in gemclus.linear)": [[17, "gemclus.linear.RIM"]], "__init__() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.__init__"]], "fit() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.fit"]], "fit_predict() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.fit_predict"]], "get_params() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.get_params"]], "predict() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.predict"]], "predict_proba() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.predict_proba"]], "score() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.score"]], "set_params() (gemclus.linear.rim method)": [[17, "gemclus.linear.RIM.set_params"]], "mlpmmd (class in gemclus.mlp)": [[18, "gemclus.mlp.MLPMMD"]], "__init__() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.__init__"]], "fit() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.fit"]], "fit_predict() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.fit_predict"]], "get_params() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.get_params"]], "predict() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.predict"]], "predict_proba() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.predict_proba"]], "score() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.score"]], "set_params() (gemclus.mlp.mlpmmd method)": [[18, "gemclus.mlp.MLPMMD.set_params"]], "mlpwasserstein (class in gemclus.mlp)": [[19, "gemclus.mlp.MLPWasserstein"]], "__init__() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.__init__"]], "fit() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.fit"]], "fit_predict() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.fit_predict"]], "get_params() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.get_params"]], "predict() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.predict"]], "predict_proba() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.predict_proba"]], "score() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.score"]], "set_params() (gemclus.mlp.mlpwasserstein method)": [[19, "gemclus.mlp.MLPWasserstein.set_params"]], "sparselinearmmd (class in gemclus.sparse)": [[20, "gemclus.sparse.SparseLinearMMD"]], "__init__() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.__init__"]], "fit() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.fit"]], "fit_predict() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.fit_predict"]], "get_params() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.get_params"]], "get_selection() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.get_selection"]], "path() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.path"]], "predict() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.predict"]], "predict_proba() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.predict_proba"]], "score() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.score"]], "set_params() (gemclus.sparse.sparselinearmmd method)": [[20, "gemclus.sparse.SparseLinearMMD.set_params"]], "sparsemlpmmd (class in gemclus.sparse)": [[21, "gemclus.sparse.SparseMLPMMD"]], "__init__() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.__init__"]], "fit() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.fit"]], "fit_predict() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.fit_predict"]], "get_params() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.get_params"]], "get_selection() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.get_selection"]], "path() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.path"]], "predict() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.predict"]], "predict_proba() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.predict_proba"]], "score() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.score"]], "set_params() (gemclus.sparse.sparsemlpmmd method)": [[21, "gemclus.sparse.SparseMLPMMD.set_params"]]}})